{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","services/persons.js","components/Notification.js","App.js","index.js"],"names":["Filter","value","onChange","PersonForm","handleSubmit","name","handleName","number","handleNumber","onSubmit","type","Persons","array","filter","removePerson","map","person","RegExp","test","onClick","id","baseUrl","axios","get","then","response","data","delete","object","post","put","Notification","message","text","className","style","color","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","setFilter","setMessage","useEffect","Services","initialPersons","event","target","preventDefault","p","includes","window","confirm","find","console","log","returnedContact","catch","err","setTimeout","newContact","concat","deletionResponse","error","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8dd931e1.chunk.js","sourcesContent":["\nconst Filter = ({value, onChange}) => (\n\t<div>\n\t\tFilter shown with: <input \n\t\t\tvalue={value}\n\t\t\tonChange={onChange} \n\t\t/>\n\t</div>\n)\n\nexport default Filter\n","\nconst PersonForm = ({handleSubmit, name, handleName, number, handleNumber}) => (\n<form onSubmit={handleSubmit} >\n\t<div>\n\t\tname: <input \n\t\tvalue={name}\n\t\tonChange={handleName}\n\t\t/>\n\t</div>\n\t<div>\n\t\tnumber: <input\n\t\tvalue={number}\n\t\tonChange={handleNumber}\n\t\t/>\n\t</div>\n\t<div>\n\t\t<button type=\"submit\">add</button>\n\t</div>\n</form>\n)\n\nexport default PersonForm \n","\nconst Persons = ({array, filter, removePerson}) => ( \n\t<div>\n\t{array.map( person => {\n\t\tif (new RegExp(filter, 'i').test(person.name)) {\n\t\treturn (\n\t\t\t<div key={person.name}>{person.name}: {person.number}  \n\t\t\t<button onClick={() => removePerson(person.id)}>Remove</button>\n\t\t\t</div>\n\t\t) \n\t\t}\n\t}\n\t)}\n\t</div>\n)\n\nexport default Persons\n","import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => (\n\taxios.get(baseUrl)\n\t\t.then(response => response.data)\n)\n\nconst create = (object) => (\n\taxios.post(baseUrl, object)\n\t\t.then(response => response.data)\n)\n\nconst remove = (id) => (\n\taxios.delete(`${baseUrl}/${id}`, {data: {id: id}})\n\t\t.then(response => response.data)\n)\n\nconst update = (id, object) => (\n\taxios.put(`${baseUrl}/${id}`, object)\n\t\t.then(response => response.data)\n)\n\nexport default { getAll, remove, create, update }\n","\nconst Notification = ({ message }) => {\n\tif ( message.text === null ){\n\t\treturn null\n\t}\n\treturn (\n\t\t<div className=\"error\" style={{color: `${message.color}`}}>\n\t\t\t{message.text}\n\t\t</div>\n\t)\n}\n\nexport default Notification\n","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport Services from './services/persons.js'\nimport Notification from './components/Notification'\n\nconst App = () => {\n\tconst [persons, setPersons] = useState([]) \n\tconst [ newName, setNewName ] = useState('')\n\tconst [ newNumber, setNewNumber ] = useState('')\n\tconst [ filter, setFilter ] = useState('')\n\tconst [ message, setMessage ] = useState({text: null, color: 'blank'})\n//----------------------------------------------------------------------------------------- \n\t\n\tconst addPerson = (event) => {\n\t\tevent.preventDefault()\n\t\tconst person = { name: newName, number: newNumber }\n\n\t\tif (persons.map( p => p.name).includes(newName) && window.confirm(`${newName} is already added to phonebook, replace old number with new one?`)) {\n\t\t\t\n\t\t\tconst id = persons.find( p => p.name === newName).id\n\t\t\tconsole.log(id)\n\t\t\tServices\n\t\t\t\t.update(id, person)\n\t\t\t\t.then(returnedContact => \n\t\t\t\t\tsetPersons(persons.map( p => p.id === returnedContact.id ? returnedContact: p ))\n\t\t\t\t).catch(err => {\n\t\t\t\t\tsetMessage({text: `Sorry, contact ${newName} was already deleted from the server`, color: 'red'})\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tsetMessage({text: null, color: 'blank'})\n\t\t\t\t\t\t}, 5000)\n\t\t\t\t\tsetPersons(persons.filter( p => p.name !== newName))\n\t\t\t\t})\n\t\t\tsetMessage({text: `Number of ${newName} was changed to ${newNumber}`, color: 'green'})\n\t\t\tsetTimeout(() => {\n\t\t\t\tsetMessage({text: null, color: 'blank'})\n\t\t\t}, 5000)\n\t\t} else {\n\t\t\tServices\n\t\t\t\t.create(person)\n\t\t\t\t.then(newContact => setPersons(persons.concat(newContact)))\n\t\t\tsetMessage({text: `Added ${person.name}`, color: 'green'})\n\t\t\tsetTimeout(() => {\n\t\t\t\tsetMessage({text: null, color: 'blank'})\t\n\t\t\t}, 5000)\n\t\t}\n\t\t\n\t\tsetNewName('')\n\t\tsetNewNumber('')\n\t\tsetFilter('')\n\t}\n//----------------------------------------------------------------------------------------- \n\n\tconst hook = () => {\n\t\tServices\n\t\t\t.getAll()\n\t\t\t.then(initialPersons => {\n\t\t\t\tsetPersons(initialPersons)\n\t\t\t})\n\t}\n\tuseEffect(hook, [])\n//----------------------------------------------------------------------------------------- \n\n\tconst removePerson = (id) => {\n\t\tif (window.confirm(\"Do you really want to delete this contact\")) {\n\t\t\tServices\n\t\t\t\t.remove(id)\n\t\t\t\t.then(deletionResponse => console.log(\"Phone contact was removed from server\")).catch(error =>{\n\t\t\t\t\tsetMessage({text: `Sorry, contact was already removed from the server`, color: \"red\"})\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tsetMessage({text: null, color: 'blank'})\n\t\t\t\t\t}, 5000)\n\t\t\t\t})\n\t\t\tsetPersons( persons.filter( p => p.id !== id ))\n\t\t}}\n//----------------------------------------------------------------------------------------- \n\n\tconst handleNameChange = (event) => {\n\t\tsetNewName(event.target.value)\n\t}\n\n\tconst handleNumberChange = (event) => {\n\t\tsetNewNumber(event.target.value)\n\t}\n\n\tconst handleFilterChange = (event) => {\n\t\tsetFilter(event.target.value)\n\t}\n//----------------------------------------------------------------------------------------- \n\t\n  return (\n    <div>\n      <h2>Phonebook</h2>\n\t  <Notification message={message} />\n\t  <Filter value={filter} onChange={handleFilterChange} />      \n\t  <h2>Add new</h2>\n\t  <PersonForm \n\t  \thandleSubmit={addPerson}\n\t  \tname={newName}\n\t  \thandleName={handleNameChange}\n\t  \tnumber={newNumber}\n\t  \thandleNumber={handleNumberChange}\n\t  />\n            <h2>Numbers</h2>\n\t\t  <Persons array={persons} filter={filter} removePerson={removePerson} />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}